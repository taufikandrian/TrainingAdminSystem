/* ---------------------------------------------------- */
/*  Generated by Enterprise Architect Version 12.1 		*/
/*  Created On : 14-Sep-2017 9:19:05 AM 				*/
/*  DBMS       : SQL Server 2012 						*/
/* ---------------------------------------------------- */

/* Drop Foreign Key Constraints */

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_course_name_tb_course_type_tb]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [course_name_tb] DROP CONSTRAINT [FK_course_name_tb_course_type_tb]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Division_Job_Family]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [division_tb] DROP CONSTRAINT [FK_Division_Job_Family]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Eligible_User_Training]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [eligible_user_tb] DROP CONSTRAINT [FK_Eligible_User_Training]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Eligible_User_User]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [eligible_user_tb] DROP CONSTRAINT [FK_Eligible_User_User]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Grade_Job_Family]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [grade_tb] DROP CONSTRAINT [FK_Grade_Job_Family]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Training_Course_Course_Classroom]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [training_course_tb] DROP CONSTRAINT [FK_Training_Course_Course_Classroom]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_training_course_tb_course_name_tb]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [training_course_tb] DROP CONSTRAINT [FK_training_course_tb_course_name_tb]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Training_Course_Training]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [training_course_tb] DROP CONSTRAINT [FK_Training_Course_Training]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_User_Course_Detail_User_Course]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [user_course_detail_tb] DROP CONSTRAINT [FK_User_Course_Detail_User_Course]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_User_Course_Detail_User_Course_Attendance]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [user_course_detail_tb] DROP CONSTRAINT [FK_User_Course_Detail_User_Course_Attendance]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_User_Course_Training_Course]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [user_course_tb] DROP CONSTRAINT [FK_User_Course_Training_Course]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_User_Course_User]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [user_course_tb] DROP CONSTRAINT [FK_User_Course_User]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_User_Role_Roles]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [user_role_tb] DROP CONSTRAINT [FK_User_Role_Roles]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_User_Role_User]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [user_role_tb] DROP CONSTRAINT [FK_User_Role_User]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_User_Division]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [user_tb] DROP CONSTRAINT [FK_User_Division]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_User_Grade]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [user_tb] DROP CONSTRAINT [FK_User_Grade]
GO

/* Drop Tables */

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[course_classroom_tb]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [course_classroom_tb]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[course_name_tb]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [course_name_tb]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[course_type_tb]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [course_type_tb]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[division_tb]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [division_tb]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[eligible_user_tb]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [eligible_user_tb]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[grade_tb]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [grade_tb]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[job_family_tb]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [job_family_tb]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[role_tb]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [role_tb]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[training_course_tb]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [training_course_tb]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[training_tb]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [training_tb]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[user_course_attendance_tb]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [user_course_attendance_tb]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[user_course_detail_tb]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [user_course_detail_tb]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[user_course_tb]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [user_course_tb]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[user_role_tb]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [user_role_tb]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[user_tb]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [user_tb]
GO

/* Create Tables */

CREATE TABLE [course_classroom_tb]
(
	[course_classroom_id] uniqueidentifier NOT NULL DEFAULT NEWID(),
	[course_classroom_code] char(10) NULL,
	[course_classroom_name] varchar(50) NULL,
	[course_classroom_description] varchar(255) NULL,
	[course_classroom_capacity] int NULL
)
GO

CREATE TABLE [course_name_tb]
(
	[course_name_id] uniqueidentifier NOT NULL,
	[course_name_code] varchar(50) NULL,
	[course_name_name] varchar(255) NULL,
	[course_name_description] text NULL,
	[course_type_id] uniqueidentifier NULL
)
GO

CREATE TABLE [course_type_tb]
(
	[course_type_id] uniqueidentifier NOT NULL DEFAULT NEWID(),
	[course_type_name] varchar(255) NULL,
	[course_type_description] varchar(255) NULL,
	[course_type_level] tinyint NULL,
	[course_type_group] varchar(50) NULL,
	[training_type_id] uniqueidentifier NULL
)
GO

CREATE TABLE [division_tb]
(
	[devision_id] uniqueidentifier NOT NULL DEFAULT NEWID(),
	[devision_code] char(10) NULL,
	[devision_name] varchar(50) NULL,
	[devision_description] varchar(255) NULL,
	[job_family_id] uniqueidentifier NULL
)
GO

CREATE TABLE [eligible_user_tb]
(
	[eligible_user_id] uniqueidentifier NOT NULL DEFAULT NEWID(),
	[user_id] uniqueidentifier NULL,
	[training_id] uniqueidentifier NULL
)
GO

CREATE TABLE [grade_tb]
(
	[grade_id] uniqueidentifier NOT NULL DEFAULT NEWID(),
	[grade_code] char(10) NULL,
	[grade_name] varchar(50) NULL,
	[grade_desciption] varchar(255) NULL,
	[job_family_id] uniqueidentifier NULL
)
GO

CREATE TABLE [job_family_tb]
(
	[job_family_id] uniqueidentifier NOT NULL DEFAULT NEWID(),
	[job_family_code] char(10) NULL,
	[job_family_name] varchar(50) NULL,
	[job_family_description] varchar(255) NULL
)
GO

CREATE TABLE [role_tb]
(
	[role_id] uniqueidentifier NOT NULL DEFAULT NEWID(),
	[role_code] char(10) NULL,
	[role_name] varchar(50) NULL,
	[role_desciption] varchar(255) NULL
)
GO

CREATE TABLE [training_course_tb]
(
	[training_course_id] uniqueidentifier NOT NULL DEFAULT NEWID(),
	[training_course_name] varchar(50) NULL,
	[training_course_description] text NULL,
	[training_course_trainer_id] uniqueidentifier NULL,
	[training_course_backup_trainer_id] uniqueidentifier NULL,
	[training_course_start_date] date NULL,
	[training_course_end_date] date NULL,
	[training_course_capacity] int NULL,
	[training_course_status] varchar(50) NULL,
	[created_at] datetime NULL,
	[created_by] uniqueidentifier NULL,
	[updated_at] datetime NULL,
	[updated_by] uniqueidentifier NULL,
	[deleted_at] datetime NULL,
	[deleted_by] uniqueidentifier NULL,
	[training_id] uniqueidentifier NULL,
	[course_classroom_id] uniqueidentifier NULL,
	[course_name_id] uniqueidentifier NULL
)
GO

CREATE TABLE [training_tb]
(
	[training_id] uniqueidentifier NOT NULL DEFAULT NEWID(),
	[training_name] varchar(255) NULL,
	[training_status] varchar(50) NULL,
	[training_description] text NULL,
	[training_start_date] date NULL,
	[training_end_date] date NULL,
	[created_at] datetime NULL,
	[created_by] uniqueidentifier NULL,
	[updated_at] datetime NULL,
	[updated_by] uniqueidentifier NULL,
	[deleted_at] datetime NULL,
	[deleted_by] uniqueidentifier NULL,
	[training_type_id] uniqueidentifier NULL
)
GO

CREATE TABLE [user_course_attendance_tb]
(
	[user_course_attendance_id] uniqueidentifier NOT NULL DEFAULT NEWID(),
	[user_course_attendance_code] varchar(10) NULL,
	[user_course_attendance_name] varchar(50) NULL,
	[user_course_attendance_description] varchar(255) NULL
)
GO

CREATE TABLE [user_course_detail_tb]
(
	[user_course_detail_id] uniqueidentifier NOT NULL DEFAULT NEWID(),
	[user_course_detail_start_date] date NULL,
	[user_course_detail_end_date] date NULL,
	[user_course_detail_start_time] time(7) NULL,
	[user_course_detail_end_time] time(7) NULL,
	[user_course_id] uniqueidentifier NULL,
	[user_course_attendance_id] uniqueidentifier NULL
)
GO

CREATE TABLE [user_course_tb]
(
	[user_course_id] uniqueidentifier NOT NULL DEFAULT NEWID(),
	[user_course_status] varchar(50) NULL,
	[user_course_description] text NULL,
	[user_course_average_score] varchar(50) NULL,
	[user_course_final_score] varchar(50) NULL,
	[user_course_final_test] varchar(50) NULL,
	[user_id] uniqueidentifier NULL,
	[training_course_id] uniqueidentifier NULL
)
GO

CREATE TABLE [user_role_tb]
(
	[user_role_id] uniqueidentifier NOT NULL DEFAULT NEWID(),
	[user_role_status] varchar(50) NULL,
	[user_id] uniqueidentifier NULL,
	[roles_id] uniqueidentifier NULL
)
GO

CREATE TABLE [user_tb]
(
	[user_id] uniqueidentifier NOT NULL DEFAULT NEWID(),
	[user_full_name] varchar(100) NULL,
	[user_email] varchar(100) NULL,
	[user_account_name] varchar(100) NULL,
	[user_password] text NULL,
	[user_status] varchar(50) NULL,
	[created_at] datetime NULL,
	[updated_at] datetime NULL,
	[deleted_at] datetime NULL,
	[grade_id] uniqueidentifier NULL,
	[devision_id] uniqueidentifier NULL
)
GO

/* Create Primary Keys, Indexes, Uniques, Checks */

ALTER TABLE [course_classroom_tb] 
 ADD CONSTRAINT [PK_Course_Classroom]
	PRIMARY KEY CLUSTERED ([course_classroom_id] ASC)
GO

ALTER TABLE [course_name_tb] 
 ADD CONSTRAINT [PK_course_name_tb]
	PRIMARY KEY CLUSTERED ([course_name_id] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_course_name_tb_course_type_tb] 
 ON [course_name_tb] ([course_type_id] ASC)
GO

ALTER TABLE [course_type_tb] 
 ADD CONSTRAINT [PK_course_type_tb]
	PRIMARY KEY CLUSTERED ([course_type_id] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_course_type_tb_training_type_tb] 
 ON [course_type_tb] ([training_type_id] ASC)
GO

ALTER TABLE [division_tb] 
 ADD CONSTRAINT [PK_Division]
	PRIMARY KEY CLUSTERED ([devision_id] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Division_Job_Family] 
 ON [division_tb] ([job_family_id] ASC)
GO

ALTER TABLE [eligible_user_tb] 
 ADD CONSTRAINT [PK_Eligible_User]
	PRIMARY KEY CLUSTERED ([eligible_user_id] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Eligible_User_Training] 
 ON [eligible_user_tb] ([training_id] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Eligible_User_User] 
 ON [eligible_user_tb] ([user_id] ASC)
GO

ALTER TABLE [grade_tb] 
 ADD CONSTRAINT [PK_Grade]
	PRIMARY KEY CLUSTERED ([grade_id] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Grade_Job_Family] 
 ON [grade_tb] ([job_family_id] ASC)
GO

ALTER TABLE [job_family_tb] 
 ADD CONSTRAINT [PK_Job_Family]
	PRIMARY KEY CLUSTERED ([job_family_id] ASC)
GO

ALTER TABLE [role_tb] 
 ADD CONSTRAINT [PK_Roles]
	PRIMARY KEY CLUSTERED ([role_id] ASC)
GO

ALTER TABLE [training_course_tb] 
 ADD CONSTRAINT [PK_Training_Course]
	PRIMARY KEY CLUSTERED ([training_course_id] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Training_Course_Course_Classroom] 
 ON [training_course_tb] ([course_classroom_id] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_training_course_tb_course_name_tb] 
 ON [training_course_tb] ([course_name_id] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Training_Course_Training] 
 ON [training_course_tb] ([training_id] ASC)
GO

ALTER TABLE [training_tb] 
 ADD CONSTRAINT [PK_Training]
	PRIMARY KEY CLUSTERED ([training_id] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Training_Training_Type] 
 ON [training_tb] ([training_type_id] ASC)
GO

ALTER TABLE [user_course_attendance_tb] 
 ADD CONSTRAINT [PK_User_Course_Attendance]
	PRIMARY KEY CLUSTERED ([user_course_attendance_id] ASC)
GO

ALTER TABLE [user_course_detail_tb] 
 ADD CONSTRAINT [PK_Course_Detail]
	PRIMARY KEY CLUSTERED ([user_course_detail_id] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_User_Course_Detail_User_Course] 
 ON [user_course_detail_tb] ([user_course_id] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_User_Course_Detail_User_Course_Attendance] 
 ON [user_course_detail_tb] ([user_course_attendance_id] ASC)
GO

ALTER TABLE [user_course_tb] 
 ADD CONSTRAINT [PK_User_Course]
	PRIMARY KEY CLUSTERED ([user_course_id] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_User_Course_Training_Course] 
 ON [user_course_tb] ([training_course_id] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_User_Course_User] 
 ON [user_course_tb] ([user_id] ASC)
GO

ALTER TABLE [user_role_tb] 
 ADD CONSTRAINT [PK_User_Role]
	PRIMARY KEY CLUSTERED ([user_role_id] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_User_Role_Roles] 
 ON [user_role_tb] ([roles_id] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_User_Role_User] 
 ON [user_role_tb] ([user_id] ASC)
GO

ALTER TABLE [user_tb] 
 ADD CONSTRAINT [PK_User]
	PRIMARY KEY CLUSTERED ([user_id] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_User_Division] 
 ON [user_tb] ([devision_id] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_User_Grade] 
 ON [user_tb] ([grade_id] ASC)
GO

/* Create Foreign Key Constraints */

ALTER TABLE [course_name_tb] ADD CONSTRAINT [FK_course_name_tb_course_type_tb]
	FOREIGN KEY ([course_type_id]) REFERENCES [course_type_tb] ([course_type_id]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [division_tb] ADD CONSTRAINT [FK_Division_Job_Family]
	FOREIGN KEY ([job_family_id]) REFERENCES [job_family_tb] ([job_family_id]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [eligible_user_tb] ADD CONSTRAINT [FK_Eligible_User_Training]
	FOREIGN KEY ([training_id]) REFERENCES [training_tb] ([training_id]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [eligible_user_tb] ADD CONSTRAINT [FK_Eligible_User_User]
	FOREIGN KEY ([user_id]) REFERENCES [user_tb] ([user_id]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [grade_tb] ADD CONSTRAINT [FK_Grade_Job_Family]
	FOREIGN KEY ([job_family_id]) REFERENCES [job_family_tb] ([job_family_id]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [training_course_tb] ADD CONSTRAINT [FK_Training_Course_Course_Classroom]
	FOREIGN KEY ([course_classroom_id]) REFERENCES [course_classroom_tb] ([course_classroom_id]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [training_course_tb] ADD CONSTRAINT [FK_training_course_tb_course_name_tb]
	FOREIGN KEY ([course_name_id]) REFERENCES [course_name_tb] ([course_name_id]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [training_course_tb] ADD CONSTRAINT [FK_Training_Course_Training]
	FOREIGN KEY ([training_id]) REFERENCES [training_tb] ([training_id]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [user_course_detail_tb] ADD CONSTRAINT [FK_User_Course_Detail_User_Course]
	FOREIGN KEY ([user_course_id]) REFERENCES [user_course_tb] ([user_course_id]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [user_course_detail_tb] ADD CONSTRAINT [FK_User_Course_Detail_User_Course_Attendance]
	FOREIGN KEY ([user_course_attendance_id]) REFERENCES [user_course_attendance_tb] ([user_course_attendance_id]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [user_course_tb] ADD CONSTRAINT [FK_User_Course_Training_Course]
	FOREIGN KEY ([training_course_id]) REFERENCES [training_course_tb] ([training_course_id]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [user_course_tb] ADD CONSTRAINT [FK_User_Course_User]
	FOREIGN KEY ([user_id]) REFERENCES [user_tb] ([user_id]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [user_role_tb] ADD CONSTRAINT [FK_User_Role_Roles]
	FOREIGN KEY ([roles_id]) REFERENCES [role_tb] ([role_id]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [user_role_tb] ADD CONSTRAINT [FK_User_Role_User]
	FOREIGN KEY ([user_id]) REFERENCES [user_tb] ([user_id]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [user_tb] ADD CONSTRAINT [FK_User_Division]
	FOREIGN KEY ([devision_id]) REFERENCES [division_tb] ([devision_id]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [user_tb] ADD CONSTRAINT [FK_User_Grade]
	FOREIGN KEY ([grade_id]) REFERENCES [grade_tb] ([grade_id]) ON DELETE No Action ON UPDATE No Action
GO

/* Create Table Comments */

EXEC sp_addextendedproperty 'MS_Description', 'Agung also was here', 'Schema', [dbo], 'table', [division_tb]
GO
